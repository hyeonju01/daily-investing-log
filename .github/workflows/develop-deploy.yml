name: Deploy to Staging

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Build Application
        run: npm run build

      - name: Build Docker Image
        run: docker build --target production -t dil-staging-app:1.0.0 .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag and Push Docker Image
        run: |
          docker tag dil-staging-app:1.0.0 ${{ secrets.DOCKER_USERNAME }}/dil-staging-app:develop
          docker push ${{ secrets.DOCKER_USERNAME }}/dil-staging-app:develop

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH Port Forwarding and Connect to Database
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_SSH_KEY }}
          script: |
            echo "Writing SSH key to /tmp/db_ec2_ssh_key.pem..."
            echo "${{ secrets.DB_EC2_SSH_KEY }}" > /tmp/db_ec2_ssh_key.pem
            chmod 600 /tmp/db_ec2_ssh_key.pem
            
            echo "Adding remote host to known_hosts..."
            mkdir -p ~/.ssh
            ssh-keyscan -H ${{ secrets.DB_EC2_HOST }} >> ~/.ssh/known_hosts

            echo "Setting up SSH port forwarding on EC2..."
            nohup ssh -L 15432:${{ secrets.RDS_HOST }}:3306 -i /tmp/db_ec2_ssh_key.pem ubuntu@${{ secrets.DB_EC2_HOST }} -N > port-forward.log 2>&1 &
            sleep 5
            
            if ss -tuln | grep 15432; then
              echo "SSH tunnel established successfully on port 15432."
            else
              echo "Failed to establish SSH tunnel. Error log:" >&2
              cat port-forward.log >&2
              exit 1
            fi

#            echo "Setting up SSH port forwarding on EC2..."
#            nohup ssh -L 15432:${{ secrets.RDS_HOST }}:3306 -i ${{ secrets.DB_EC2_SSH_KEY }} ubuntu@${{ secrets.DB_EC2_HOST }} -N > port-forward.log 2>&1 &
#            sleep 5
#            if netstat -tuln | grep 15432; then
#              echo "SSH tunnel established successfully on port 15432."
#            else
#              echo "Failed to establish SSH tunnel." >&2
#              exit 1
#            fi

      - name: Deploy to Staging Server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_EC2_HOST }}
          username: ${{ secrets.STAGING_EC2_USERNAME }}
          key: ${{ secrets.STAGING_EC2_SSH_KEY }}
          script: |
            echo "Setting permissions for .env.staging file..."
            sudo chown ubuntu:ubuntu /home/ubuntu/.env.staging
            sudo chmod 644 /home/ubuntu/.env.staging
            
            echo "Pulling the latest image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/dil-staging-app:develop
            
            echo "Shutting down the current service"
            sudo docker-compose -f docker-compose.yml --env-file .env.staging down
            
            echo "Starting the service with docker-compose..."
            sudo docker-compose -f docker-compose.yml --env-file .env.staging up -d
